model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  password  String
  userBooks UserBook[]
}

model Book {
  id          Int         @id @default(autoincrement())
  title       String
  author      String
  description String
  pageCount   Int
  saga        String?
  categories  Category[]  // many-to-many
  userBooks   UserBook[]  // relaci√≥n con los usuarios

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model UserBook {
  id        Int           @id @default(autoincrement())
  user      User          @relation(fields: [userId], references: [id])
  userId    Int
  book      Book          @relation(fields: [bookId], references: [id])
  bookId    Int
  status    ReadingStatus

  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@unique([userId, bookId]) // cada usuario solo puede tener un "registro" por libro
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  books  Book[]  // many-to-many
}

enum ReadingStatus {
  READ
  READING
  TO_READ
}
